import requests
from urllib.parse import urljoin
import socket


def check_sql_injection(url):
    """Check for SQL Injection vulnerability."""
    sql_payload = "' OR '1'='1"
    target_url = urljoin(url, f"?id={sql_payload}")

    try:
        response = requests.get(target_url)
        if "sql" in response.text.lower() or "error" in response.text.lower():
            print(f"[!] Potential SQL Injection vulnerability found at {url}")
        else:
            print(f"[+] No SQL Injection vulnerability found at {url}")
    except requests.RequestException as e:
        print(f"[-] Error checking {url}: {e}")


def scan_ports(ip, ports):
    """Scan open ports on a given IP."""
    open_ports = []
    for port in ports:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((ip, port))
        if result == 0:
            open_ports.append(port)
        sock.close()

    return open_ports


def main():
    url = input("Enter the target URL (e.g., http://example.com): ").strip()
    ip = input("Enter the target IP address: ").strip()

    print("\n[+] Checking for SQL Injection vulnerabilities...")
    check_sql_injection(url)

    print("\n[+] Scanning for open ports...")
    common_ports = [80, 443, 21, 22, 25, 8080]  # Common ports to check
    open_ports = scan_ports(ip, common_ports)

    if open_ports:
        print(f"[!] Open ports found: {', '.join(map(str, open_ports))}")
    else:
        print("[+] No open ports found.")


if __name__ == "__main__":
    main()